---
import { getCollection } from "astro:content";
import { format, compareDesc } from "date-fns";

interface Props {
  count?: number;
  id?: string;
}

const isAtDEV = import.meta.env.DEV;
const { count: blogCount, id: tagID } = Astro.props;

let allBlogPosts = await getCollection("blog");
allBlogPosts.sort((a, b) =>
  compareDesc(new Date(a.data.pubDate), new Date(b.data.pubDate)),
);
allBlogPosts = allBlogPosts.filter((post) => isAtDEV || !post.data.draft);
allBlogPosts = blogCount ? allBlogPosts.slice(0, blogCount) : allBlogPosts;
---

<ul class="space-y-2" id={tagID}>
  {
    allBlogPosts.map((post) => (
      <li>
        <div class="space-x-4">
          <span class="text-primary">
            {format(post.data.pubDate, "yyyy MM")}
          </span>
          {isAtDEV && post.data.draft && (
            <div class="inline-block aspect-square size-2 rounded-full bg-emerald-400" />
          )}
          <a href={"/blog/" + post.data.slug}>{post.data.title}</a>
        </div>
      </li>
    ))
  }
</ul>
